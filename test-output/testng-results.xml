<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Yahoo" duration-ms="48" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
    <groups>
    </groups>
    <test name="Yahoo Registeration Test" duration-ms="2" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
      <class name="test.YahooTest">
        <test-method status="PASS" signature="initializeSelenium()" name="initializeSelenium" is-config="true" duration-ms="7" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="shutdownSelenium()" name="shutdownSelenium" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
      </class>
      <class name="test.YahooRegistrationTest">
        <test-method status="PASS" signature="testRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testRegister" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[email1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[city1]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testRegister" duration-ms="1" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[email3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[city3]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testRegister" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[email2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[city2]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
    <test name="Yahoo news Test" duration-ms="2" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
      <class name="test.YahooNewsTest">
        <test-method status="FAIL" signature="testSendMail()" name="testSendMail" duration-ms="1" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<Good//> but was:<Good>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<Good//> but was:<Good>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:480)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:171)
	at org.testng.Assert.assertEquals(Assert.java:181)
	at test.YahooNewsTest.testSendMail(YahooNewsTest.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:74)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:846)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1170)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1125)
	at org.testng.TestRunner.privateRun(TestRunner.java:749)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:317)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)
	at org.testng.SuiteRunner.run(SuiteRunner.java:223)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:965)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:890)
	at org.testng.TestNG.run(TestNG.java:824)
	at org.testng.TestNG.privateMain(TestNG.java:1128)
	at org.testng.TestNG.main(TestNG.java:1092)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="xyz()" name="xyz" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
      </class>
    </test>
    <test name="Yahoo Mail Test" duration-ms="5" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
      <class name="test.YahooTest">
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="testReceiveMail()" name="testReceiveMail" duration-ms="1" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="testSendMail()" name="testSendMail" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="afterMethod()" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
        <test-method status="PASS" signature="afterTest()" name="afterTest" is-config="true" duration-ms="0" started-at="2015-05-23T01:27:00Z" finished-at="2015-05-23T01:27:00Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
